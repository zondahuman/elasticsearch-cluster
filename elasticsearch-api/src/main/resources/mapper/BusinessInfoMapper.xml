<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abin.lee.elasticsearch.svr.api.dao.BusinessInfoMapper" >
  <resultMap id="BaseResultMap" type="com.abin.lee.elasticsearch.svr.api.model.BusinessInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="VARCHAR" />
    <result column="business_name" property="businessName" jdbcType="VARCHAR" />
    <result column="business_price" property="businessPrice" jdbcType="DECIMAL" />
    <result column="province_name" property="provinceName" jdbcType="VARCHAR" />
    <result column="city_name" property="cityName" jdbcType="VARCHAR" />
    <result column="district_name" property="districtName" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="field1" property="field1" jdbcType="VARCHAR" />
    <result column="field2" property="field2" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, longitude, latitude, business_name, business_price, province_name, city_name, 
    district_name, category, field1, field2, flag, create_time, update_time, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from business_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from business_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfoExample" >
    delete from business_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business_info (user_id, longitude, latitude, 
      business_name, business_price, province_name, 
      city_name, district_name, category, 
      field1, field2, flag, 
      create_time, update_time, version
      )
    values (#{userId,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{businessName,jdbcType=VARCHAR}, #{businessPrice,jdbcType=DECIMAL}, #{provinceName,jdbcType=VARCHAR}, 
      #{cityName,jdbcType=VARCHAR}, #{districtName,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into business_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="businessName != null" >
        business_name,
      </if>
      <if test="businessPrice != null" >
        business_price,
      </if>
      <if test="provinceName != null" >
        province_name,
      </if>
      <if test="cityName != null" >
        city_name,
      </if>
      <if test="districtName != null" >
        district_name,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="field1 != null" >
        field1,
      </if>
      <if test="field2 != null" >
        field2,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null" >
        #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessPrice != null" >
        #{businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="provinceName != null" >
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="districtName != null" >
        #{districtName,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="field1 != null" >
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null" >
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfoExample" resultType="java.lang.Integer" >
    select count(*) from business_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update business_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.businessName != null" >
        business_name = #{record.businessName,jdbcType=VARCHAR},
      </if>
      <if test="record.businessPrice != null" >
        business_price = #{record.businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.provinceName != null" >
        province_name = #{record.provinceName,jdbcType=VARCHAR},
      </if>
      <if test="record.cityName != null" >
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.districtName != null" >
        district_name = #{record.districtName,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.field1 != null" >
        field1 = #{record.field1,jdbcType=VARCHAR},
      </if>
      <if test="record.field2 != null" >
        field2 = #{record.field2,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update business_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      business_name = #{record.businessName,jdbcType=VARCHAR},
      business_price = #{record.businessPrice,jdbcType=DECIMAL},
      province_name = #{record.provinceName,jdbcType=VARCHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      district_name = #{record.districtName,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      field1 = #{record.field1,jdbcType=VARCHAR},
      field2 = #{record.field2,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfo" >
    update business_info
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="businessName != null" >
        business_name = #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessPrice != null" >
        business_price = #{businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="provinceName != null" >
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="districtName != null" >
        district_name = #{districtName,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="field1 != null" >
        field1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null" >
        field2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.abin.lee.elasticsearch.svr.api.model.BusinessInfo" >
    update business_info
    set user_id = #{userId,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      business_name = #{businessName,jdbcType=VARCHAR},
      business_price = #{businessPrice,jdbcType=DECIMAL},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      district_name = #{districtName,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      field1 = #{field1,jdbcType=VARCHAR},
      field2 = #{field2,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>